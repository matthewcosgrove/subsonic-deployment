- type: replace
  path: /instance_groups/name=jumpbox/jobs/-
  value:
    name: pre-start-script
    release: os-conf
    properties:
      script: |-
          #!/bin/bash
          set -e
          chmod 1777 /tmp # https://github.com/cloudfoundry/bosh-linux-stemcell-builder/issues/39
          # bosh cli injected args
          UBUNTU_USER_HOME_DIR="((jumpbox_home))"
          SUBSONIC_SERVER_DOMAIN="((subsonic_domain))"
          SUBSONIC_JVM_START_UP_ARGS="((subsonic_args))"
          SUBSONIC_LETS_ENCRYPT_EMAIL="((subsonic_lets_encrypt_email))"
          SUBSONIC_SOLO_DROPBOX_FOLDER="((subsonic_solo_dropbox_folder))"
          # start ubuntu script - agnostic of bosh cli usage
          : "${UBUNTU_USER_HOME_DIR:? UBUNTU_USER_HOME_DIR must be set}"
          : "${SUBSONIC_SERVER_DOMAIN:? SUBSONIC_SERVER_DOMAIN must be set to the DNS being used to refer to this instance which should be configured in nginx e.g. music.mydomain.com }"
          : "${SUBSONIC_JVM_START_UP_ARGS:? SUBSONIC_JVM_START_UP_ARGS must be set to override the defaults in /etc/default/subsonic}"
          : "${SUBSONIC_SOLO_DROPBOX_FOLDER:? SUBSONIC_SOLO_DROPBOX_FOLDER must be set to the only folder which wont get excluded}"
          apt-get -qq update
          apt -yqq install python
          dropbox_cli=/usr/local/bin/dropbox.py
          pushd $UBUNTU_USER_HOME_DIR
          # install dropboxd
          wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64" | tar xzf -
          chown -R jumpbox:jumpbox .dropbox-dist
          # prepare dropbox start up script needed for interactive login
          dropbox_up_script=ubuntu_dropbox_up.sh
          cat <<EOF > $dropbox_up_script
            #!/bin/bash
            dropbox(){
             /usr/local/bin/dropbox.py "\$@"
            }
            echo "IMPORTANT: You must now login.. then kill the script and continue as described here"
            echo "WARNING: Starting dropbox in the next step will start downloading everything from your account, so ensure the service is running to selective sync i.e. systemctl status subsonic-dropbox-exclusions"
            echo "After login start dropbox with the following command"
            echo "dropbox start && dropbox lansync n"
            dropbox status && ~/.dropbox-dist/dropboxd
          EOF
          # TODO: find some way to systemctl start dropbox after login
          chmod +x $dropbox_up_script
          chown jumpbox:jumpbox $dropbox_up_script
          # alias for dropbox cli
          echo "alias dropbox=$dropbox_cli" > .bash_aliases
          popd
          [ ! -f $dropbox_cli ] && wget -O $dropbox_cli "https://www.dropbox.com/download?dl=packages/dropbox.py"
          chmod +x $dropbox_cli

          # https://linoxide.com/linux-how-to/install-dropbox-ubuntu/
          cat <<EOF >/etc/systemd/system/dropbox.service
          [Unit]
          Description=Dropbox Service
          After=network.target

          [Service]
          ExecStart=/bin/sh -c '/usr/local/bin/dropbox.py start'
          ExecStop=/bin/sh -c '/usr/local/bin/dropbox.py stop'
          PIDFile=${UBUNTU_USER_HOME_DIR}/.dropbox/dropbox.pid
          User=jumpbox
          Group=jumpbox
          Type=forking
          Restart=on-failure
          RestartSec=5
          StartLimitInterval=60s
          StartLimitBurst=3

          [Install]
          WantedBy=multi-user.target
          EOF

          systemctl daemon-reload
          systemctl enable dropbox

          # https://www.linuxbabe.com/ubuntu/install-subsonic-media-server-ubuntu-18-04-https
          apt -yqq install openjdk-8-jre
          subsonic_version=6.1.5
          wget -O subsonic.deb https://s3-eu-west-1.amazonaws.com/subsonic-public/download/subsonic-${subsonic_version}.deb
          dpkg -i subsonic.deb
          # change default root user, and do so idempotently
          sed -i '/SUBSONIC_USER/ s/=.*$/=jumpbox/' /etc/default/subsonic
          subsonic_jvm_start_up_args_with_ampersand_escaped_for_sed=${SUBSONIC_JVM_START_UP_ARGS//&/\\&} # https://stackoverflow.com/a/44375021/752167
          # as values contain / use different sed delimeter #
          sed -i '/^SUBSONIC_ARGS/ s#=.*$#="'"$subsonic_jvm_start_up_args_with_ampersand_escaped_for_sed"'"#' /etc/default/subsonic
          systemctl restart subsonic

          # Either enable IPv6 or change the nginx configuration issue --> https://serverfault.com/a/828014
          # Means we know the nginx install will fail so install and swallow failure
          apt -yqq install nginx || true # https://stackoverflow.com/a/11231970/752167
          sed -i '/:80 /s/^/#/' /etc/nginx/sites-enabled/default
          systemctl restart nginx || true
          systemctl start nginx || true
          # ubuntu 16.04 bug --> https://bugs.launchpad.net/ubuntu/+source/nginx/+bug/1581864
          # also see https://stackoverflow.com/a/42084804/752167
          mkdir /etc/systemd/system/nginx.service.d
          printf "[Service]\nExecStartPost=/bin/sleep 0.1\n" > /etc/systemd/system/nginx.service.d/override.conf
          systemctl daemon-reload
          systemctl restart nginx
          # check with 'netstat -plunt | grep nginx'

          # 'EOF' vs EOF with escaping --> https://stackoverflow.com/a/25903579/752167 and https://unix.stackexchange.com/a/405254/308152
          cat <<EOF >/etc/nginx/conf.d/subsonic-proxy.conf
          server {
                  listen 80;
                  server_name $SUBSONIC_SERVER_DOMAIN;

                  location / {
                          proxy_pass http://127.0.0.1:4040;
                          proxy_set_header Host \$http_host;
                          proxy_set_header X-Real-IP \$remote_addr;
                          proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                          proxy_set_header X-Forwarded-Proto \$scheme;
                  }
          }
          EOF
          systemctl reload nginx
          apt install -yqq software-properties-common
          add-apt-repository -y ppa:certbot/certbot
          apt update
          apt install -yqq certbot python3-certbot-nginx
          certbot -n --nginx --agree-tos --redirect --hsts --staple-ocsp --email $SUBSONIC_LETS_ENCRYPT_EMAIL --domain $SUBSONIC_SERVER_DOMAIN
          # TODO: Run this as Timer Service so that it gets updated on every renew as well.. the certbot writes to this file, so should test if would get overwritten first
          # Ensure that the settings page works etc. Full insight here https://sourceforge.net/p/subsonic/bugs/179/
          sed -i '/proxy_set_header X-Forwarded-Proto/ a '"proxy_redirect http:// https://;"'' /etc/nginx/conf.d/subsonic-proxy.conf
          systemctl reload nginx

          # dropbox exclusions service
          DROPBOX_FOLDER_TO_KEEP=$SUBSONIC_SOLO_DROPBOX_FOLDER
          dropbox_location=$UBUNTU_USER_HOME_DIR/Dropbox
          cat <<EOF > /usr/bin/systemctl_dropbox_exclusions.sh
          #!/bin/bash
          [[ ! -d "$dropbox_location" ]] && { echo "FATAL - $dropbox_location does not exist"; exit 1; }

          pushd $dropbox_location > /dev/null
          # TODO: avoid ls ---> http://mywiki.wooledge.org/ParsingLs
          dropbox(){
           /usr/local/bin/dropbox.py "\$@"
          }
          while [ "\$(ls -1 | grep -v $DROPBOX_FOLDER_TO_KEEP | wc -l)" -ne "0" ]
          do
          item=\$(ls | grep -v "$DROPBOX_FOLDER_TO_KEEP" | head -1)
          echo Excluding \$item
          dropbox exclude add "\$item"
          echo "'dropbox exclude add' completed for \$item"
          done
          popd > /dev/null
          dropbox exclude list

          EOF

          chmod +x /usr/bin/systemctl_dropbox_exclusions.sh

          # create systemd timer
          cat <<EOF > /etc/systemd/system/subsonic-dropbox-exclusions.timer

          [Unit]
          Description=Runs subsonic dropbox-exclusions fixer every xx

          [Timer]
          # Time to wait after booting before we run first time
          OnBootSec=1min
          # Time between running each consecutive time
          OnUnitActiveSec=1min
          Unit=subsonic-dropbox-exclusions.service
          EOF

          # create systemd service
          cat <<EOF > /etc/systemd/system/subsonic-dropbox-exclusions.service

          [Unit]
          Description=Subsonic dropbox-exclusions

          [Service]
          Type=oneshot
          ExecStart=/bin/bash /usr/bin/systemctl_dropbox_exclusions.sh
          User=jumpbox
          EOF

          systemctl daemon-reload
          systemctl start subsonic-dropbox-exclusions.timer
